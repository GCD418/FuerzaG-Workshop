@page
@model FuerzaG.Pages.Services.CreateModel
@{
    ViewData["Title"] = "Nuevo Servicio";
}

<div class="container mt-4 mb-5">
    <h2>Nuevo Servicio</h2>

    @* Mantengo tu fuente de errores: Model.ValidationErrors *@
    @if (Model.ValidationErrors.Any())
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            <h6 class="alert-heading mb-2">
                <i class="fas fa-exclamation-triangle"></i> Errores de validación:
            </h6>
            <ul class="mb-0 small">
                @foreach (var error in Model.ValidationErrors)
                {
                    <li>@error</li>
                }
            </ul>
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Cerrar"></button>
        </div>
    }

    <form method="post" class="card card-body shadow-sm" id="serviceForm" novalidate>
        <div class="row g-3">
            <!-- Nombre -->
            <div class="col-md-6">
                <label asp-for="Service.Name" class="form-label">Nombre del servicio *</label>
                <input asp-for="Service.Name"
                       class="form-control"
                       placeholder="Ej: Cambio de aceite" />
                <!-- <div class="form-text">Debe tener entre 3 y 100 caracteres.</div> -->
            </div>

            <!-- Tipo -->
            <div class="col-md-6">
                <label asp-for="Service.Type" class="form-label">Tipo *</label>
                <select asp-for="Service.Type" class="form-select">
                    <option value="">-- Selecciona el tipo --</option>
                    <option value="Preventivo">Preventivo</option>
                    <option value="Correctivo">Correctivo</option>
                </select>
            </div>

            <!-- Precio -->
            <div class="col-md-6">
                <label asp-for="Service.Price" class="form-label">Precio *</label>
                <!-- Usamos type="text" para no bloquear el envío y dejar la validación al servidor -->
                <input asp-for="Service.Price"
                       class="form-control"
                       type="text"
                       inputmode="decimal"
                       placeholder="Ej: 150,00" />
                <!-- <div class="form-text">Usa separador decimal (ej: 150,00).</div> -->
            </div>

            <!-- Descripción -->
            <div class="col-12">
                <label asp-for="Service.Description" class="form-label">Descripción</label>
                <textarea asp-for="Service.Description"
                          class="form-control"
                          rows="3"
                          placeholder="Detalles del servicio"></textarea>
                <!-- <div class="form-text">Máximo 500 caracteres.</div> -->
            </div>

            
        </div>

        <div class="mt-4">
            <button class="btn btn-dark" type="submit">
                <i class="fas fa-save"></i> Guardar
            </button>
            <a asp-page="/Services/ServicePage" class="btn btn-outline-secondary">
                <i class="fas fa-times"></i> Cancelar
            </a>
        </div>

        <div class="mt-3">
            <small class="text-muted">* Campos obligatorios</small>
        </div>
    </form>
</div>

@section Scripts {
    <script>
        // Front-only: evita negativos en la UI (no valida, solo ayuda visual)
        document.addEventListener('DOMContentLoaded', function () {
            const priceInput = document.getElementById('Service_Price');
            if (!priceInput) return;

            priceInput.addEventListener('input', function () {
                // elimina un '-' inicial si lo escriben por error
                if (this.value.startsWith('-')) this.value = this.value.replace('-', '');
            });
        });
    </script>
}
